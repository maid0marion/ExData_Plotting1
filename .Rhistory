# pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id)  {
while (id < 100){fname <- paste("0", id, sep="")}
else{fname=id}
f <-  paste(fname, "csv", sep=".")
fp <- paste(directory, f, sep="/")
t <- read.csv(fp)
#   for (i in seq_along(x)) print(x[i])
sn <- t[,pollutant]
bad <- is.na(sn)
print(mean(sn[!bad]))
}
# pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id)  {
while (id < 100){id <- paste("0", id, sep="")}
f <-  paste(fname, "csv", sep=".")
fp <- paste(directory, f, sep="/")
t <- read.csv(fp)
#   for (i in seq_along(x)) print(x[i])
sn <- t[,pollutant]
bad <- is.na(sn)
print(mean(sn[!bad]))
}
pollutantmean("specdata","nitrate",1:10)
s
# pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id)  {
for(i in seq_along(id))
if (id < 100){id <- paste("0", id, sep="")}
f <-  paste(id, "csv", sep=".")
fp <- paste(directory, f, sep="/")
t <- read.csv(fp)
#   for (i in seq_along(x)) print(x[i])
sn <- t[,pollutant]
bad <- is.na(sn)
print(mean(sn[!bad]))
}
pollutantmean <- function("specdata","nitrate", 23)
sn
pollutantmean <- function("specdata","nitrate", "023)
pollutantmean <- function("specdata","nitrate", "023")
# pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id)  {
#     for(i in seq_along(id))
#            if (id < 100){id <- paste("0", id, sep="")}
f <-  paste(id, "csv", sep=".")
fp <- paste(directory, f, sep="/")
t <- read.csv(fp)
#   for (i in seq_along(x)) print(x[i])
sn <- t[,pollutant]
bad <- is.na(sn)
print(mean(sn[!bad]))
}
pollutantmean <- function("specdata","nitrate", "023")
install.packages("RMySQL")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
setwd("~/ExData_Plotting1")
hpc <- read.table("household_power_consumption.txt")
colnames(hps)
colnames(hpc)
?read.table
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";")
colnames(hpc)
dim(hpc)
?read.table
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
colnames(hpc)
hpc[as.date($Date) = 2012,]
hpc[as.date(hpc$Date) = 2012,]
hpc[as.date(hpc$Date) = "02-02-2012",]
hpc[as.date(hpc$Date) = 02-02-2012,]
hpc[as.date(hpc$Date) == 02-02-2012,]
hpc@Date
hpc$Date
swirl()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector
)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 22, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
hpc["date" = "02-02-2012",]
hpc["date" == "02-02-2012",]
hpc$Date
hpc["Date" == "02/02/2012",]
hpc["Date" == "02/02/2017",]
hpc["Date" == "02/02/2007",]
hpc$Date
hpc["Date" == "2/2/2007",]
hpc["Date" == 2/2/2007,]
hpc["Date" = "2/2/2007"",]
""
hpc["Date" = "2/2/2007",]
hpc[,"Date" == "2/2/2007"]
hpc[,1] <- as.Date(hpc[,1])
attributes(hpc)
head(hpc)
colclasses(hpc)
col_classes(hpc)
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
class(hpc$Date)
head(hpc$Date)
hpc[,1] <- as.Date(hpc[,1], "%d %m %Y")
head(hpc$Date)
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
hpc[,1] <- as.Date(hpc[,1], "%d/%m/%Y")
head(hpc$Date)
hpc[hpc$Date == "2007-2-2",]
hpc2 <- hpc[hpc$Date == "2007-2-2",]
head(hpc2)
hpc2 <- hpc[(hpc$Date <= "2007-2-2" & hpc$Date >="2007-2-1"),]
head(hpc2)
tail(hpc2)
hpc2 <- hpc[(hpc$Date <= "2007-2-2" & hpc$Date >="2007-2-1"),]
rm(hpc)
?hist
hist(hpc2$Global_active_power)
?par
hist(hpc2$Global_active_power, col="red")
title("Global Active Power")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)", ylab = "Frequency", title = "Global Active Power")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)", ylab = "Frequency")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)", ylab = "Frequency")
?hist
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power", yaxp = "c("0", "1200", "200")")
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power", yaxp = c("0", "1200", "200"))
hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power")
png(file = "plot1.png") ## Open PDF device; create 'myplot.pdf' in my working directory ## Create plot and send to a file (no plot appears on screen)
with(hpc2, hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency"))
title(main = "Global Active Power")
dev.off()
png(file = "plot1.png") ## Open PDF device; create 'myplot.pdf' in my working directory ## Create plot and send to a file (no plot appears on screen)
with(hpc2, hist(hpc2$Global_active_power, col = "red", xlab= "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power"))
dev.off()
?strptime
head(hc2[,2])
head(hpc2[,2])
tail(hpc2[,2])
summary(hpc2[,2])
hpc[,2] <- strptime(hpc[,2], "%H:%M:%S")
hp2c[,2] <- strptime(hpc2[,2], "%H:%M:%S")
hpc2[,2] <- strptime(hpc2[,2], "%H:%M:%S")
hpc2
head(hpc2)
head(hpc2[,2])
rm(hpc2)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
hpc[,1] <- as.Date(hpc[,1], "%d/%m/%Y")
head(hpc[,2])
hpc[,2] <- strptime(hpc2[,2], "%H:%M:%S")
hpc[,2] <- strptime(hpc[,2], "%H:%M:%S")
head(hpc[,2])
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
hpc[,1] <- as.Date(hpc[,1], "%d/%m/%Y")
hpc[,2] <- strptime(hpc[,2], "%T")
rm(hpc)
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
dt <- paste(hpc[,1], hpc[,2])
head(dt)
dt2 <- strptime(x, "%d/%m/%Y %H:%M:%S")
class(dt2)
colnames(dt) <- c("Datetime")
hpc2 <- colbind(dt2, hpc)
hpc2 <- bind_cols(dt2, hpc)
hpc2 <- col_bind(dt2, hpc)
hpc2 <- cols_bind(dt2, hpc)
?col_bind
?bind_col
?bind_cols
?cbind
hpc2 <- cbind(dt2, hpc)
View(my_matrix)
View(my_matrix2)
View(hpc)
length(dt2)
dt2
dt1
dt
dt2 <- strptime(dt, "%d/%m/%Y %H:%M:%S")
length(dt2)
hpc2 <- cbind(dt2, hpc)
head(hpc2)
plot(hpc2$dt2, hpc2$Global_active_power)
rm(hpc)
hpc3 <- hpc2[(hpc2$Date <= "2007-2-2" & hpc2$Date >="2007-2-1"),]
hpc2["Date"] <- as.Date(hpc2["Date"], "%d/%m/%Y")
hpc2[,"Date"] <- as.Date(hpc2[,"Date"], "%d/%m/%Y")
hpc3 <- hpc2[(hpc2$Date <= "2007-2-2" & hpc2$Date >="2007-2-1"),]
rm(hpc2)
plot(hpc3$dt2, hpc3$Global_active_power)
example(par)
plot(hpc3$dt2, hpc3$Global_active_power)
plot(hpc3$dt2, as.numeric(hpc3$Global_active_power)
)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n")
lines(hpc3$dt2, hpc3$Global_active_power)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n", ylab = "Global Active Power (kilowatts")
lines(hpc3$dt2, hpc3$Global_active_power)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(hpc3$dt2, hpc3$Global_active_power)
?png
colnames(hpc3)
hpcMelt <- melt(hpc3, id=c("dt2", "Global_active_power"), measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
library(reshape2)
hpcMelt <- melt(hpc3, id=c("dt2", "Global_active_power"), measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
head(hpcMelt)
head(hpc3)
head(hpc(melt()))
head(hpcMelt)
plot(hpcMelt$dt2, hpcMelt$Global_active_power, type = "n")
dim(hpcMelt)
plot(hpcMelt$dt2, hpcMelt$Global_active_power, type = "n")
lines(hpcMelt$dt2[hpcMelt$variable == "Sub_metering_1"], hpcMelt$Global_active_power[hpcMelt$variable =="Sub_metering_1"], col = "green")
lines(hpcMelt$dt2[hpcMelt$variable =="Sub_metering_2"], hpcMelt$Global_active_power[hpcMelt$variable == "Sub_metering_2"], col = "blue")
plot(hpcMelt$dt2, hpcMelt$value, type = "n")
lines(hpcMelt$dt2[hpcMelt$variable =="Sub_metering_2"], hpcMelt$value[hpcMelt$variable == "Sub_metering_2"], col = "blue")
lines(hpcMelt$dt2[hpcMelt$variable =="Sub_metering_1"], hpcMelt$value[hpcMelt$variable == "Sub_metering_1"], col = "green")
lines(hpcMelt$dt2[hpcMelt$variable =="Sub_metering_3"], hpcMelt$value[hpcMelt$variable == "Sub_metering_3"], col = "red")
setwd("~/ExData_Plotting1")
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
hpc[,1] <- as.Date(hpc[,1], "%d/%m/%Y")
# Create a new variable that creates a datetime field by combining the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt2 <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc2 <- cbind(dt2, hpc)
rm(hpc)
# Subset dataframe to only contain measurements for the two-day period between Feb 1, 2007 and Feb 2, 2007
# and remove the full dataset to free memory.
hpc2[,2] <- as.Date(hpc2[,2], "%d/%m/%Y")
hpc3 <- hpc2[(hpc2$Date <= "2007-2-2" & hpc2$Date >="2007-2-1"),]
rm(hpc2)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(hpc3$dt2, hpc3$Global_active_power)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n")
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
# Create a new variable that creates a datetime field by combining the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt2 <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc2 <- cbind(dt2, hpc)
rm(hpc)
dim(hpc3)
rm(hpc3)
rm(hpcMelt)
rm(my_data)
hpc2[,2] <- as.Date(hpc2[,2], "%d/%m/%Y")
hpc3 <- hpc2[(hpc2$Date <= "2007-2-2" & hpc2$Date >="2007-2-1"),]
rm(hpc2)
dim(hpc3)
plot(hpc3$dt2, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(hpc3$dt2, hpc3$Global_active_power)
rm(hpc3)
rm(dt)
rm(dt2)
setwd("~/ExData_Plotting1")
## This script creates a histogram of the frequency of Global Active Power values in kilowatts and
## stores the result in a "plot1.png" in the current working directory.  The data used to construct
## histogram is a subset of the source dataset capturing only the values collected over the 2-day period
## between February 1, 2007 and February 2, 2007.
# Load the dataset into R and convert 'Date' column to a 'Date' type.
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
# Create a new variable that creates a datetime field by combining the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc2 <- cbind(dt, hpc)
rm(hpc)
# Subset dataframe to only contain measurements for the two-day period between Feb 1, 2007 and Feb 2, 2007
# and remove the full dataset to free memory.
hpc2[,2] <- as.Date(hpc2[,2], "%d/%m/%Y")
hpc3 <- hpc2[(hpc2$Date <= "2007-2-2" & hpc2$Date >="2007-2-1"),]
rm(hpc2)
plot(hpc3$dt, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(hpc3$dt, hpc3$Global_active_power)
png(file = "plot2.png") ## Open PDF device; create 'myplot.pdf' in my working directory ## Create plot and send to a file (no plot appears on screen)
with(hpc3, plot(hpc3$dt, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")))
lines(hpc3$dt, hpc3$Global_active_power)
dev.off()
png(file = "plot2.png") ## Open PDF device; create 'myplot.pdf' in my working directory ## Create plot and send to a file (no plot appears on screen)
with(hpc3, plot(hpc3$dt, hpc3$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)"))
lines(hpc3$dt, hpc3$Global_active_power)
dev.off()
setwd("~/ExData_Plotting1")
source("plot1.R")
source("plot1.R")
source("plot2.R")
setwd("~/ExData_Plotting1")
library(reshape2)
# Load the dataset into R.
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
# Create new datetime variable using the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc <- cbind(dt, hpc)
# Convert 'Date' column to a 'Date' type and subset dataframe to measurements
# for the two-day period between Feb 1, 2007 and Feb 2, 2007.
hpc[,2] <- as.Date(hpc[,2], "%d/%m/%Y")
hpc2 <- hpc2[(hpc$Date <= "2007-2-2" & hpc$Date >="2007-2-1"),]
# Remove the full dataset from the workspace to free memory.
rm(hpc)
# Reshape data frame so variables to plot are in a single column and each
# row stores a single value.
hpcMelt <- melt(hpc2, id=c("dt", "Global_active_power"), measure.vars =
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(hpcMelt$dt, hpcMelt$value, type = "n", xlab = "",
ylab = "Energy sub metering")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_1"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_1"])
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_2"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_2"], col = "red")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_3"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_3"], col = "blue")
setwd("~/ExData_Plotting1")
library(reshape2)
# Load the dataset into R.
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";", na.strings = "?")
# Create new datetime variable using the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc <- cbind(dt, hpc)
# Convert 'Date' column to a 'Date' type and subset dataframe to measurements
# for the two-day period between Feb 1, 2007 and Feb 2, 2007.
hpc[,2] <- as.Date(hpc[,2], "%d/%m/%Y")
hpc2 <- hpc[(hpc$Date <= "2007-2-2" & hpc$Date >="2007-2-1"),]
# Remove the full dataset from the workspace to free memory.
rm(hpc)
# Reshape data frame so variables to plot are in a single column and each
# row stores a single value.
hpcMelt <- melt(hpc2, id=c("dt", "Global_active_power"), measure.vars =
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(hpcMelt$dt, hpcMelt$value, type = "n", xlab = "",
ylab = "Energy sub metering")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_1"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_1"])
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_2"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_2"], col = "red")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_3"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_3"], col = "blue")
plot(hpcMelt$dt, hpcMelt$value, type = "n", xlab = "",
ylab = "Energy sub metering")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_1"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_1"])
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_2"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_2"], col = "red")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_3"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_3"], col = "blue")
# Create legend
?legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"))
?pch
?lch
?legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lwd = 1)
setwd("~/ExData_Plotting1")
source("plot3.R")
names(hpc2)
setwd("~/ExData_Plotting1")
## This script creates a png file, "plot4.png", in the current working directory
## containing 4 separate graphs comparing Global Active Power measurements
## over a 2-day time period. The 2-day period between February 1, 2007 and
## February 2, 2007 are subsetted from the full source dataset.
# Load the library needed to support line graphs for multiple variables.
library(reshape2)
# Load the dataset into R.
hpc <- read.table("household_power_consumption.txt", header = TRUE, sep=";",
na.strings = "?")
# Create new datetime variable using the 'Date' and 'Time' columns.
dt <- paste(hpc[,1], hpc[,2])
dt <- strptime(dt, "%d/%m/%Y %H:%M:%S")
hpc <- cbind(dt, hpc)
# Convert 'Date' column to a 'Date' type and subset dataframe to measurements
# for the two-day period between Feb 1, 2007 and Feb 2, 2007.
hpc[,2] <- as.Date(hpc[,2], "%d/%m/%Y")
hpc2 <- hpc[(hpc$Date <= "2007-2-2" & hpc$Date >="2007-2-1"),]
# Remove the full dataset from the workspace to free memory.
rm(hpc)
# Reshape data frame so variables to plot are in a single column and each
# row stores a single value.
hpcMelt <- melt(hpc2, id=c("dt", "Global_active_power"), measure.vars =
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(2,2))
plot(hpc2$dt, hpc2$Global_active_power, type = "n",
xlab = "", ylab = "Global Active Power")
lines(hpc2$dt, hpc2$Global_active_power)
plot(hpc2$dt, hpc2$Voltage, type = "n",
xlab = "datetime", ylab = "Voltage")
lines(hpc2$dt, hpc2$Voltage)
plot(hpcMelt$dt, hpcMelt$value, type = "n", xlab = "",
ylab = "Energy sub metering")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_1"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_1"])
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_2"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_2"], col = "red")
lines(hpcMelt$dt[hpcMelt$variable =="Sub_metering_3"],
hpcMelt$value[hpcMelt$variable == "Sub_metering_3"], col = "blue")
legend("topright", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2",  "Sub_metering_3"),
lwd = 1)
plot(hpc2$dt, hpc2$Global_reactive_power, type = "n",
xlab = "datetime", ylab = "Global Reactive Power")
lines(hpc2$dt, hpc2$Global_reactive_power)
setwd("~/ExData_Plotting1")
source("plot4.R")
source("plot1.R")
source("plot2.R")
source("plot3.R")
?uncompress
?unzip
setwd(".")
getwed
getwd()
getwd()
setwd(".")
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
if (!file.exists("data")) {
dir.create("data")
}
download.file(fileUrl,
destfile = "./data/exdata-data-household_power_consumption.zip",
method = "curl")
destfile
fileUrl
unzip("./data/exdata-data-household_power_consumption.zip")
unzip("./data/exdata-data-household_power_consumption.zip")
?unzip
unzip("./data/exdata-data-household_power_consumption.zip", exdir = "./data")
## This script creates a histogram of the frequency of Global Active Power
## over a 2-day period and stores the result in a "plot1.png" file in the
## current working directory.  The 2-day period between February 1, 2007 and
## February 2, 2007 are subsetted from the full source dataset.
# If not already present, create 'data' directory in current working directory
# to store the source dataset files.
if (!file.exists("data")) {
dir.create("data")
}
# If dataset file not already downloaded, download compressed (.zip) file
# from internet and store in 'data' folder.
if (!file.exists("./data/exdata-data-household_power_consumption.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,
destfile = "./data/exdata-data-household_power_consumption.zip",
method = "curl")
}
# If uncompressed version of dataset not present, uncompress the source dataset
# and store it in the 'data' folder.
if (!file.exists("./data/household_power_consumption.txt")) {
unzip("./data/exdata-data-household_power_consumption.zip",
exdir = "./data")
}
